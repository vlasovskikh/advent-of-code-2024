from aoc24 import p16


def test_example_1() -> None:
    lines = """
###############
#.......#....E#
#.#.###.#.###.#
#.....#.#...#.#
#.###.#####.#.#
#.#.#.......#.#
#.#.#####.###.#
#...........#.#
###.#.#####.#.#
#...#.....#.#.#
#.#.#.###.#.#.#
#.....#...#.#.#
#.###.#.#.#.#.#
#S..#.....#...#
###############
""".strip().splitlines()
    maze = p16.parse_input(lines)
    assert maze.shortest_path() == (7036, 45)


def test_example_2() -> None:
    lines = """
#################
#...#...#...#..E#
#.#.#.#.#.#.#.#.#
#.#.#.#...#...#.#
#.#.#.#.###.#.#.#
#...#.#.#.....#.#
#.#.#.#.#.#####.#
#.#...#.#.#.....#
#.#.#####.#.###.#
#.#.#.......#...#
#.#.###.#####.###
#.#.#...#.....#.#
#.#.#.#####.###.#
#.#.#.........#.#
#.#.#.#########.#
#S#.............#
#################
""".strip().splitlines()
    maze = p16.parse_input(lines)
    assert maze.shortest_path() == (11048, 64)


def test_small_1() -> None:
    lines = """
#######
#....E#
#.#.###
#S....#
#######
""".strip().splitlines()
    maze = p16.parse_input(lines)
    assert maze.shortest_path() == (2006, 10)
